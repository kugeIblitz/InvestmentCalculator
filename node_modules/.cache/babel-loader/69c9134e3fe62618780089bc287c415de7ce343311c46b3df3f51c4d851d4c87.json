{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React_Projects\\\\002 01-starting-project\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./assets/investment-calculator-logo.png\";\nimport CalculatorForm from \"./components/CalculatorForm\";\nimport ResultTable from \"./components/ResultTable\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const calculateHandler = (userInput) => {\n  //   // Should be triggered when form is submitted\n  //   // You might not directly want to bind it to the submit event on the form though...\n\n  //   const yearlyData = []; // per-year results\n\n  //   let currentSavings = +userInput[\"current-savings\"]; // feel free to change the shape of this input object!\n  //   const yearlyContribution = +userInput[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\n  //   const expectedReturn = +userInput[\"expected-return\"] / 100;\n  //   const duration = +userInput[\"duration\"];\n\n  //   // The below code calculates yearly results (total savings, interest etc)\n  //   for (let i = 0; i < duration; i++) {\n  //     const yearlyInterest = currentSavings * expectedReturn;\n  //     currentSavings += yearlyInterest + yearlyContribution;\n  //     yearlyData.push({\n  //       // feel free to change the shape of the data pushed to the array!\n  //       year: i + 1,\n  //       yearlyInterest: yearlyInterest,\n  //       savingsEndOfYear: currentSavings,\n  //       yearlyContribution: yearlyContribution,\n  //     });\n  //   }\n\n  //   // do something with yearlyData ...\n\n  // };\n\n  const [userData, setUserData] = useState();\n  function getFormData(UserData) {\n    const formData = {\n      currentSavings: UserData.currentSavings,\n      yearlyContribution: UserData.yearlyContribution,\n      expectedReturn: UserData.expectedReturn,\n      duration: UserData.duration\n    };\n    setUserData(formData);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Investment Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalculatorForm, {\n      SetFormData: getFormData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultTable, {\n      currentSavings: userData.currentSavings,\n      yearlyContribution: userData.yearlyContribution,\n      expectedReturn: userData.expectedReturn,\n      duration: userData.duration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qK1HHYh43CVRssY/aQNc69qK2p8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","CalculatorForm","ResultTable","useState","jsxDEV","_jsxDEV","App","_s","userData","setUserData","getFormData","UserData","formData","currentSavings","yearlyContribution","expectedReturn","duration","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","SetFormData","_c","$RefreshReg$"],"sources":["D:/React/React_Projects/002 01-starting-project/01-starting-project/src/App.js"],"sourcesContent":["import logo from \"./assets/investment-calculator-logo.png\";\nimport CalculatorForm from \"./components/CalculatorForm\";\nimport ResultTable from \"./components/ResultTable\";\nimport { useState } from \"react\";\nfunction App() {\n  // const calculateHandler = (userInput) => {\n  //   // Should be triggered when form is submitted\n  //   // You might not directly want to bind it to the submit event on the form though...\n\n  //   const yearlyData = []; // per-year results\n\n  //   let currentSavings = +userInput[\"current-savings\"]; // feel free to change the shape of this input object!\n  //   const yearlyContribution = +userInput[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\n  //   const expectedReturn = +userInput[\"expected-return\"] / 100;\n  //   const duration = +userInput[\"duration\"];\n\n  //   // The below code calculates yearly results (total savings, interest etc)\n  //   for (let i = 0; i < duration; i++) {\n  //     const yearlyInterest = currentSavings * expectedReturn;\n  //     currentSavings += yearlyInterest + yearlyContribution;\n  //     yearlyData.push({\n  //       // feel free to change the shape of the data pushed to the array!\n  //       year: i + 1,\n  //       yearlyInterest: yearlyInterest,\n  //       savingsEndOfYear: currentSavings,\n  //       yearlyContribution: yearlyContribution,\n  //     });\n  //   }\n\n  //   // do something with yearlyData ...\n\n  // };\n\n  const [userData, setUserData] = useState();\n\n  function getFormData(UserData) {\n    const formData = {\n      currentSavings: UserData.currentSavings,\n      yearlyContribution: UserData.yearlyContribution,\n      expectedReturn: UserData.expectedReturn,\n      duration: UserData.duration,\n    };\n    setUserData(formData);\n  \n  }\n\n  return (\n    <div>\n      <header className=\"header\">\n        <img src={logo} alt=\"logo\" />\n        <h1>Investment Calculator</h1>\n      </header>\n\n      <CalculatorForm SetFormData={getFormData} />\n      <ResultTable\n        currentSavings={userData.currentSavings}\n        yearlyContribution={userData.yearlyContribution}\n        expectedReturn={userData.expectedReturn}\n        duration={userData.duration}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAE1C,SAASO,WAAWA,CAACC,QAAQ,EAAE;IAC7B,MAAMC,QAAQ,GAAG;MACfC,cAAc,EAAEF,QAAQ,CAACE,cAAc;MACvCC,kBAAkB,EAAEH,QAAQ,CAACG,kBAAkB;MAC/CC,cAAc,EAAEJ,QAAQ,CAACI,cAAc;MACvCC,QAAQ,EAAEL,QAAQ,CAACK;IACrB,CAAC;IACDP,WAAW,CAACG,QAAQ,CAAC;EAEvB;EAEA,oBACEP,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAQa,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACxBZ,OAAA;QAAKc,GAAG,EAAEnB,IAAK;QAACoB,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7BnB,OAAA;QAAAY,QAAA,EAAI;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAETnB,OAAA,CAACJ,cAAc;MAACwB,WAAW,EAAEf;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CnB,OAAA,CAACH,WAAW;MACVW,cAAc,EAAEL,QAAQ,CAACK,cAAe;MACxCC,kBAAkB,EAAEN,QAAQ,CAACM,kBAAmB;MAChDC,cAAc,EAAEP,QAAQ,CAACO,cAAe;MACxCC,QAAQ,EAAER,QAAQ,CAACQ;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjB,EAAA,CA1DQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}